/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package br.unb.cic.bionimbus.avro.gen;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TaskError extends org.apache.avro.specific.SpecificExceptionBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"error\",\"name\":\"TaskError\",\"namespace\":\"br.unb.cic.bionimbus.avro.gen\",\"fields\":[{\"name\":\"pluginId\",\"type\":\"string\"},{\"name\":\"taskId\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence pluginId;
  @Deprecated public java.lang.CharSequence taskId;
  @Deprecated public java.lang.CharSequence message$;

  public TaskError() {
    super();
  }
  
  public TaskError(Object value) {
    super(value);
  }

  public TaskError(Throwable cause) {
    super(cause);
  }

  public TaskError(Object value, Throwable cause) {
    super(value, cause);
  }
  
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return pluginId;
    case 1: return taskId;
    case 2: return message$;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: pluginId = (java.lang.CharSequence)value$; break;
    case 1: taskId = (java.lang.CharSequence)value$; break;
    case 2: message$ = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'pluginId' field.
   */
  public java.lang.CharSequence getPluginId() {
    return pluginId;
  }

  /**
   * Sets the value of the 'pluginId' field.
   * @param value the value to set.
   */
  public void setPluginId(java.lang.CharSequence value) {
    this.pluginId = value;
  }

  /**
   * Gets the value of the 'taskId' field.
   */
  public java.lang.CharSequence getTaskId() {
    return taskId;
  }

  /**
   * Sets the value of the 'taskId' field.
   * @param value the value to set.
   */
  public void setTaskId(java.lang.CharSequence value) {
    this.taskId = value;
  }

  /**
   * Gets the value of the 'message$' field.
   */
  public java.lang.CharSequence getMessage$() {
    return message$;
  }

  /**
   * Sets the value of the 'message$' field.
   * @param value the value to set.
   */
  public void setMessage$(java.lang.CharSequence value) {
    this.message$ = value;
  }

  /** Creates a new TaskError RecordBuilder */
  public static br.unb.cic.bionimbus.avro.gen.TaskError.Builder newBuilder() {
    return new br.unb.cic.bionimbus.avro.gen.TaskError.Builder();
  }
  
  /** Creates a new TaskError RecordBuilder by copying an existing Builder */
  public static br.unb.cic.bionimbus.avro.gen.TaskError.Builder newBuilder(br.unb.cic.bionimbus.avro.gen.TaskError.Builder other) {
    return new br.unb.cic.bionimbus.avro.gen.TaskError.Builder(other);
  }
  
  /** Creates a new TaskError RecordBuilder by copying an existing TaskError instance */
  public static br.unb.cic.bionimbus.avro.gen.TaskError.Builder newBuilder(br.unb.cic.bionimbus.avro.gen.TaskError other) {
    return new br.unb.cic.bionimbus.avro.gen.TaskError.Builder(other);
  }
  
  /**
   * RecordBuilder for TaskError instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificErrorBuilderBase<TaskError>
    implements org.apache.avro.data.ErrorBuilder<TaskError> {

    private java.lang.CharSequence pluginId;
    private java.lang.CharSequence taskId;
    private java.lang.CharSequence message$;

    /** Creates a new Builder */
    private Builder() {
      super(br.unb.cic.bionimbus.avro.gen.TaskError.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(br.unb.cic.bionimbus.avro.gen.TaskError.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing TaskError instance */
    private Builder(br.unb.cic.bionimbus.avro.gen.TaskError other) {
      super(other);
      if (isValidValue(fields()[0], other.pluginId)) {
        this.pluginId = data().deepCopy(fields()[0].schema(), other.pluginId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.taskId)) {
        this.taskId = data().deepCopy(fields()[1].schema(), other.taskId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.message$)) {
        this.message$ = data().deepCopy(fields()[2].schema(), other.message$);
        fieldSetFlags()[2] = true;
      }
    }

    @Override
    public br.unb.cic.bionimbus.avro.gen.TaskError.Builder setValue(Object value) {
      super.setValue(value);
      return this;
    }
    
    @Override
    public br.unb.cic.bionimbus.avro.gen.TaskError.Builder clearValue() {
      super.clearValue();
      return this;
    }

    @Override
    public br.unb.cic.bionimbus.avro.gen.TaskError.Builder setCause(Throwable cause) {
      super.setCause(cause);
      return this;
    }
    
    @Override
    public br.unb.cic.bionimbus.avro.gen.TaskError.Builder clearCause() {
      super.clearCause();
      return this;
    }

    /** Gets the value of the 'pluginId' field */
    public java.lang.CharSequence getPluginId() {
      return pluginId;
    }
    
    /** Sets the value of the 'pluginId' field */
    public br.unb.cic.bionimbus.avro.gen.TaskError.Builder setPluginId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.pluginId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'pluginId' field has been set */
    public boolean hasPluginId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'pluginId' field */
    public br.unb.cic.bionimbus.avro.gen.TaskError.Builder clearPluginId() {
      pluginId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'taskId' field */
    public java.lang.CharSequence getTaskId() {
      return taskId;
    }
    
    /** Sets the value of the 'taskId' field */
    public br.unb.cic.bionimbus.avro.gen.TaskError.Builder setTaskId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.taskId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'taskId' field has been set */
    public boolean hasTaskId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'taskId' field */
    public br.unb.cic.bionimbus.avro.gen.TaskError.Builder clearTaskId() {
      taskId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'message$' field */
    public java.lang.CharSequence getMessage$() {
      return message$;
    }
    
    /** Sets the value of the 'message$' field */
    public br.unb.cic.bionimbus.avro.gen.TaskError.Builder setMessage$(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.message$ = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'message$' field has been set */
    public boolean hasMessage$() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'message$' field */
    public br.unb.cic.bionimbus.avro.gen.TaskError.Builder clearMessage$() {
      message$ = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public TaskError build() {
      try {
        TaskError record = new TaskError(getValue(), getCause());
        record.pluginId = fieldSetFlags()[0] ? this.pluginId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.taskId = fieldSetFlags()[1] ? this.taskId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.message$ = fieldSetFlags()[2] ? this.message$ : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
