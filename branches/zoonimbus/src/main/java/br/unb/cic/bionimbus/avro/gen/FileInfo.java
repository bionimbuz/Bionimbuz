/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package br.unb.cic.bionimbus.avro.gen;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class FileInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FileInfo\",\"namespace\":\"br.unb.cic.bionimbus.avro.gen\",\"fields\":[{\"name\":\"fileId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"path\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String fileId;
  @Deprecated public long size;
  @Deprecated public java.lang.String path;

  /**
   * Default constructor.
   */
  public FileInfo() {}

  /**
   * All-args constructor.
   */
  public FileInfo(java.lang.String fileId, java.lang.Long size, java.lang.String path) {
    this.fileId = fileId;
    this.size = size;
    this.path = path;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return fileId;
    case 1: return size;
    case 2: return path;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: fileId = (java.lang.String)value$; break;
    case 1: size = (java.lang.Long)value$; break;
    case 2: path = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'fileId' field.
   */
  public java.lang.String getFileId() {
    return fileId;
  }

  /**
   * Sets the value of the 'fileId' field.
   * @param value the value to set.
   */
  public void setFileId(java.lang.String value) {
    this.fileId = value;
  }

  /**
   * Gets the value of the 'size' field.
   */
  public java.lang.Long getSize() {
    return size;
  }

  /**
   * Sets the value of the 'size' field.
   * @param value the value to set.
   */
  public void setSize(java.lang.Long value) {
    this.size = value;
  }

  /**
   * Gets the value of the 'path' field.
   */
  public java.lang.String getPath() {
    return path;
  }

  /**
   * Sets the value of the 'path' field.
   * @param value the value to set.
   */
  public void setPath(java.lang.String value) {
    this.path = value;
  }

  /** Creates a new FileInfo RecordBuilder */
  public static br.unb.cic.bionimbus.avro.gen.FileInfo.Builder newBuilder() {
    return new br.unb.cic.bionimbus.avro.gen.FileInfo.Builder();
  }
  
  /** Creates a new FileInfo RecordBuilder by copying an existing Builder */
  public static br.unb.cic.bionimbus.avro.gen.FileInfo.Builder newBuilder(br.unb.cic.bionimbus.avro.gen.FileInfo.Builder other) {
    return new br.unb.cic.bionimbus.avro.gen.FileInfo.Builder(other);
  }
  
  /** Creates a new FileInfo RecordBuilder by copying an existing FileInfo instance */
  public static br.unb.cic.bionimbus.avro.gen.FileInfo.Builder newBuilder(br.unb.cic.bionimbus.avro.gen.FileInfo other) {
    return new br.unb.cic.bionimbus.avro.gen.FileInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for FileInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FileInfo>
    implements org.apache.avro.data.RecordBuilder<FileInfo> {

    private java.lang.String fileId;
    private long size;
    private java.lang.String path;

    /** Creates a new Builder */
    private Builder() {
      super(br.unb.cic.bionimbus.avro.gen.FileInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(br.unb.cic.bionimbus.avro.gen.FileInfo.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing FileInfo instance */
    private Builder(br.unb.cic.bionimbus.avro.gen.FileInfo other) {
            super(br.unb.cic.bionimbus.avro.gen.FileInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.fileId)) {
        this.fileId = data().deepCopy(fields()[0].schema(), other.fileId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.size)) {
        this.size = data().deepCopy(fields()[1].schema(), other.size);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.path)) {
        this.path = data().deepCopy(fields()[2].schema(), other.path);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'fileId' field */
    public java.lang.String getFileId() {
      return fileId;
    }
    
    /** Sets the value of the 'fileId' field */
    public br.unb.cic.bionimbus.avro.gen.FileInfo.Builder setFileId(java.lang.String value) {
      validate(fields()[0], value);
      this.fileId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'fileId' field has been set */
    public boolean hasFileId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'fileId' field */
    public br.unb.cic.bionimbus.avro.gen.FileInfo.Builder clearFileId() {
      fileId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'size' field */
    public java.lang.Long getSize() {
      return size;
    }
    
    /** Sets the value of the 'size' field */
    public br.unb.cic.bionimbus.avro.gen.FileInfo.Builder setSize(long value) {
      validate(fields()[1], value);
      this.size = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'size' field has been set */
    public boolean hasSize() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'size' field */
    public br.unb.cic.bionimbus.avro.gen.FileInfo.Builder clearSize() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'path' field */
    public java.lang.String getPath() {
      return path;
    }
    
    /** Sets the value of the 'path' field */
    public br.unb.cic.bionimbus.avro.gen.FileInfo.Builder setPath(java.lang.String value) {
      validate(fields()[2], value);
      this.path = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'path' field has been set */
    public boolean hasPath() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'path' field */
    public br.unb.cic.bionimbus.avro.gen.FileInfo.Builder clearPath() {
      path = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public FileInfo build() {
      try {
        FileInfo record = new FileInfo();
        record.fileId = fieldSetFlags()[0] ? this.fileId : (java.lang.String) defaultValue(fields()[0]);
        record.size = fieldSetFlags()[1] ? this.size : (java.lang.Long) defaultValue(fields()[1]);
        record.path = fieldSetFlags()[2] ? this.path : (java.lang.String) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
